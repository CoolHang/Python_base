 1、介绍
  Subversion是一个自由，开源的版本控制系统，这个版本库就像一个普通的文件服务器，不同的是，它可以记录每一次文件和目录的修改情况。这样就可以很方面恢复到以前的版本，并可以查看数据更改细节。目前，Subversion已成为主流的开源代码版本管理软件之一，简称SVN。
2、SVN相关命令了解
  svn：命令行客户端
  svnadmin：用来创建、调整或修复版本库的工具
  svnserve：svn服务程序
  svndumpfilter：过滤svn版本库转储数据流的工具
  svnsync：svn数据同步工具，实现另外存一份相同的
  svnlook：用来查看办本科中不同的修订版和事务
3、两种运行模式
  3.1 利用svnserve作为独立服务运行，通过svn协议访问
  3.2 借助mod_dev_svn模块，由apache服务运行（Web/DAV）,通过http或https协议访问。

4、安装与部署
对于Ubuntu来说，装个SVN是件很容易的事，可以直接通过apt软件包管理安装。
  4.1 直接安装
  # sudo apt-get install subversion
  4.1 创建版本库
  # sudo mkdir /home/svn   
  # sudo svnadmin create /home/svn/repos
  4.2 了解版本库
  # 进入版本库查看生成的相关文件
  # cd /home/svn/repos/
  # ls
  conf  db  format  hooks  locks  README.txt
 # 我们主要关心的是conf和db文件，conf文件夹下是存放主配置文件和用户、权限位置，db文件夹是存放svn转储后的数据。
 # cd conf/
 # ls 
 authz  passwd  svnserve.conf
 # authz文件是设置用户权限，passwd文件是存储用户及密码，svnserve.conf是主配置文件，先配置主配置文件。
 4.3 配置版本库
   # sudo vi svnserve.conf  #将以下参数去掉注释
  [general]
  anon-access = none     #匿名访问权限，默认read，none为不允许访问
  auth-access = write   #认证用户权限  
  password-db = passwd  #用户信息存放文件，默认在版本库/conf下面，也可以绝对路径指定文件位置
  authz-db = authz
  # sudo vi passwd     #格式是用户名=密码，采用明文密码
  [users]
  xiaoming = 123
  zhangsan = 123
  lisi = 123
   # sudo vi authz 
  [groups]           #定义组的用户
  manager = xiaoming
  core_dev = zhangsan,lisi
  [repos:/]          #以根目录起始的repos版本库manager组为读写权限
  @manager = rw
  [repos:/media]     #core_dev对repos版本库下media目录为读写权限
  @core_dev = rw
 4.4 启动svn服务
 # sudo svnserve -d -r /home/svn
 # 查看是否启动成功，可看的监听3690端口
 # sudo netstat -antp |grep svnserve
 tcp     0      0 0.0.0.0:3690     0.0.0.0:*      LISTEN     28967/svnserve 
 # 如果想关闭服务，可使用pkill svnserve
 4.5 访问svn
 # 访问repos版本库地址
 svn://192.168.1.100/repos
 # 访问repos/media目录地址
 svn://192.168.1.100/repos/media
 # Windows下客户端访问svn服务器 
 客户端下载地址：http://tortoisesvn.net/downloads.html
 连接方式：安装客户端后 --> 右击桌面 --> 点TortoiseSVN --> 选择Repo-breowser --> 输入URL（svn://192.168.1.100/repos）--> 输入manager组的xiaoming用户和密码登录 --> 登录后右击即可上传和删除文件
黑吧安全网：http://www.myhack58.com
5、常用svn命令
 5.1 获取当前最新修订版本号
 svnlook youngest /home/svn/repos 
 5.2 将服务器上代码目录同步到本地目录
 svn checkout svn://192.168.1.100/repos/media /svn --username zhangsan --password 123  
  #不指定同步到本地目录（/svn）默认是当前目录，也可以不指定用户名和密码，需要手动输入。或使用简写svn co "svn://..."。
 5.3 把新建文件提交到svn版本库
 具体步骤：
 a) cd /svn    #切换到本地代码目录，
 b) svn add filename  
  #将文件加入svn管理，此时并未提交完成，另外提交文件也要在/svn目录，否则报"svn: '..' is not a working copy"
 c) svn ci filename   
  #添加注释说明并提交文件，此时会用nano编辑器打开，添加注释说明后按ctrl+x，再按y，最后回车完成提交
 5.4 把修改后的文件提交到svn
 svn commit -m "注释说明" filename
 5.5 更新代码到最新版本
 # 将代码目录所有文件更新到最新版本
 svn update   
 # 将某个文件还原到某个版本
 svn update -r 85 filename #85是修订版号
 5.6 对代码加锁/解锁
 # 加锁
 svn lock -m "注释说明" filename
 # 解锁
 svn unlock filename
 5.7 代码更新冲突
 如果提交时提供过期的话，说明代码冲突，需先svn update filename，再执行svn resolved filename，最后提交svn commit -m "注释说明" filename
 5.8 查看日志
 svn log filename


SVN使用方法

1. 比较单一文件和服务器上的不同： 

svn diff register.c

2. 下载下仓库：

svn co "svn://10.100.151.233/repos" co 是checkout的缩写
3. 显示日志：

svn log filename

    添加要管理的项目： svn add filename
    提交：

svn commit -m "注释说明" filename

    更新：

svn update filename

    加锁：

svn lock -m "注释说明" filename
8. 获取当前最新版本号：

svnlook youngest /home/svn/repos

    为没有添加注释的文件第一次添加注释：（应该是，这个不确定） svn ci filename  

10.         把某个文件还原到某个版本：

svn update -r 85 filename #85是修订版号
11. 查看本机 svn 库里边的文件和 本机现在的文件的状态： svn status -u -v filename

    abc.c               # svn已经在.svn目录锁定了abc.c
    bar.c               # bar.c的内容已经在本地修改过了

X      3rd_party           # 这个目录是外部定义的一部分

?      foo.o               # svn并没有管理foo.o

!      some_dir            # svn管理这个，但它可能丢失或者不完整

~      qux                 # 作为file/dir/link进行了版本控制，但类型已经改变

I      .screenrc           # svn不管理这个，配置确定要忽略它

A  +   moved_dir           # 包含历史的添加，历史记录了它的来历

M  +   moved_dir/README    # 包含历史的添加，并有了本地修改

D      stuff/fish.c        # 这个文件预定要删除

A      stuff/loot/bloo.h   # 这个文件预定要添加

C      stuff/loot/lump.c   # 这个文件在更新时发生冲突

    xyz.c               # 这个文件预定要被替换
    stuff/squawk        # 这个文件已经跳转到了分支
